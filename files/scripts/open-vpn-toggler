#!/bin/bash

# Скрипт для переключения состояния подключения OpenVPN

#
# Константы
#

# @brief    Версия скрипта
readonly COMMON_VERSION="1.0.0"
# @brief    Название скрипта
readonly COMMON_SCRIPT_FILE="$(basename "$0")"
# @brief    Путь к скрипту
readonly COMMON_SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
# @brief    Путь до директори OpenVPNToggler
readonly COMMON_DIR="/home/$USER/.config/OpenVPNToggler/"
# @brief    Путь к лог файлу
readonly COMMON_LOG_FILE="$COMMON_DIR/$COMMON_SCRIPT_FILE.log"
# @brief    Путь до конфигурационного файла VPN
readonly COMMON_CFG_FILE="$COMMON_DIR/config.ovpn"
# @brief    Путь до директории с иконками
readonly COMMON_VPN_ICON_DIR="/usr/share/icons/hicolor/256x256/apps/"
# @brief    Путь до иконки "VPN включен"
readonly COMMON_VPN_ICON_ON="$COMMON_VPN_ICON_DIR/open-vpn-on.png"
# @brief    Путь до иконки "VPN включен"
readonly COMMON_VPN_ICON_OFF="$COMMON_VPN_ICON_DIR/open-vpn-off.png"
# @brief    Название иконки ярлыка
readonly COMMON_VPN_ICON="open-vpn"
# @brief    Название ПО в уведомлении
readonly COMMON_NOTIFY_NAME="OpenVPN"

# @brief    Код успешного выполнения операции
readonly ALL_OK=0
# @brief    Код неуспешного выполнения операции
readonly NOT_OK=1

#
# Функции
#

# @brief    Основная функция
# @details  Данная функция выполняет вызов getSessionPath() и,
#               в зависимости от результата вызова, вызывает start() или stop()
# @return   Возвращает ALL_OK в случае успешного выполнения всех действий.
#               В противном случае, возвращает NOT_OK
function main ()
{
    if ! mkdir -p "$COMMON_DIR" >> /dev/null 2>&1
    then
        echo "Failed to create $COMMON_DIR!"
        return $NOT_OK
    fi

    if ! truncate -s 0 "$COMMON_LOG_FILE" >> /dev/null 2>&1
    then
        echo "Failed to create $COMMON_LOG_FILE!"
        return $NOT_OK
    fi

    if ! [ -w "$COMMON_LOG_FILE" ]
    then
        echo "Unable to write to $COMMON_LOG_FILE!"
        return $NOT_OK
    fi

    if ! [ -f "$COMMON_CFG_FILE" ]
    then
        notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_OFF" "Set OpenVPN config!"
        echo "File $COMMON_CFG_FILE does not exist!"
        return $NOT_OK
    fi

    if [ "$1" == "get" ]
    then
        getSessionPath
        return $?
    fi

    if ! getSessionPath
    then
        start
        return $?
    else
        stop
        return $?
    fi
}

# @brief    Путь к сессии
COMMON_SESSION_PATH=""

# @brief    Функция получения пути сессии VPN
# @details  Данная функция выполняет поиск пути сессии с конфигурационным файлом COMMON_CFG_FILE.
#               Найденный путь записывается в COMMON_SESSION_PATH
# @return   Возвращает ALL_OK в случае успешного подключения к VPN.
#               В противном случае возвращет NOT_OK 
function getSessionPath ()
{
    local SESSION=""

    SESSION=$(openvpn3 sessions-list | awk -v cfg="$COMMON_CFG_FILE" '
    /^-----------------------------------------------------------------------------$/ { in_block = 1; path = "" }
    /^ *Path:/ && in_block { path = $2 }
    /^ *Config name:/ && in_block {
        if ($3 == cfg) {
            print path
            exit
        }
    }
    ')

    if [ -z "$SESSION" ]
    then
        return $NOT_OK
    fi

    COMMON_SESSION_PATH="$SESSION"
    return $ALL_OK
}

# @brief    Функция подключения к VPN
# @details  Данная функция выполняет подключение к VPN
# @return   Возвращает ALL_OK в случае успешного подключения к VPN.
#               В противном случае возвращет NOT_OK 
function start ()
{
    notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_OFF" "Connecting to VPN... "
    echo -n "Connecting to VPN... "
    if ! openvpn3 session-start --config "$COMMON_CFG_FILE" >> "$COMMON_LOG_FILE" 2>&1
    then
        notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_OFF" "Failed to connect!"
        echo "Failed!"
        echo "Details:"
        echo "cat $COMMON_LOG_FILE"
        return $NOT_OK
    fi
    notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_ON" "Connected!"
    echo "Done!"
    
    xdg-icon-resource install --noupdate --size 256 "$COMMON_VPN_ICON_ON" "$COMMON_VPN_ICON"
    xdg-icon-resource forceupdate

    return $ALL_OK
}

# @brief    Функция отключения от VPN
# @details  Данная функция выполняет отключение от VPN
# @return   Возвращает ALL_OK в случае успешного отключения от VPN.
#               В противном случае возвращет NOT_OK 
function stop ()
{
    notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_ON" "Disconnecting from VPN... "
    echo -n "Disconnecting from VPN... "
    if ! openvpn3 session-manage --session-path "$COMMON_SESSION_PATH" --disconnect >> "$COMMON_LOG_FILE" 2>&1
    then
        notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_ON" "Failed to disconnect!"
        echo "Failed!"
        echo "Details:"
        echo "cat $COMMON_LOG_FILE"
        return $NOT_OK
    fi
    notify-send -a "$COMMON_NOTIFY_NAME" -i "$COMMON_VPN_ICON_OFF" "Disconnected!"
    echo "Done!"

    xdg-icon-resource install --noupdate --size 256 "$COMMON_VPN_ICON_OFF" "$COMMON_VPN_ICON"
    xdg-icon-resource forceupdate

    return $ALL_OK
}

#
# Точка входа в скрипт
#

main "$@"
exit $?
